FROM engine-room:os
LABEL maintainer="Jamil Andr√© RAICHOUNI <raichouni@gmail.com>"
ARG JDK_FILE
USER root

# use zsh for RUN commands {{{
SHELL ["/bin/zsh", "-c"]
ENV SHELL=/bin/zsh
# }}}

# system pkg manager installs {{{
RUN dnf --color yes --refresh -y install \
  cargo \
  ctags \
  gcc \
  gcc-c++ \
  gdb \
  gnupg \
  golang \
  icoutils \
  ImageMagick \
  # to run `python -m engine-room build` command during development
  keepassxc \
  # Command-line JSON processor
  jq \
  kitty-terminfo \
  luarocks \
  make \
  maven \
  neovim \
  pip \
  openssl \
  # `pinentry` is needed for `gnupg` to work with `pass`
  pinentry \
  postgresql \
  subversion && \
  ln -s /usr/bin/gcc /usr/bin/aarch64-linux-gnu-gcc  # fixes build of python's line_profiler
# }}}

# Recent JDK {{{
RUN mkdir -p /usr/lib/jvm
ADD build/${JDK_FILE}/ /usr/lib/jvm
RUN mv /usr/lib/jvm/jdk-* /usr/lib/jvm/jdk && \
  if [ -e /usr/bin/java ]; then mv /usr/bin/java /usr/bin/java.system; fi
# }}}

# kubectl {{{
RUN mkdir -p /home/nerd/.kube && \
  chown $(id -u nerd):$(id -g nerd) /home/nerd/.kube && \
  chmod 700 /home/nerd/.kube && \
  curl -LO \
  "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/arm64/kubectl" && \
  chmod +x kubectl && mv kubectl /opt && ln -s /opt/kubectl /usr/local/bin
# }}}

# GNU Privacy Guard (GnuPG) and Mozilla Secrets OPerationS (SOPS)" {{{
RUN mkdir -p /home/nerd/.gnupg/private-keys-v1.d && \
  chown -R $(id -u nerd):$(id -g nerd) /home/nerd/.gnupg && \
  chmod -R 700 /home/nerd/.gnupg && \
  dnf --color yes -y install \
  https://github.com/getsops/sops/releases/download/v3.9.0/sops-3.9.0-1.$(uname -m).rpm
# }}}

# oc - OpenShift Command Line Interface (CLI) {{{
COPY build/oc.tar /home/nerd
RUN tar -xvf oc.tar && \
  mv oc /opt && ln -s /opt/oc /usr/local/bin && \
  rm oc.tar
# }}}

# act {{{
WORKDIR /tmp
RUN curl --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/nektos/act/master/install.sh | sudo bash && \
  mv bin/act /opt && \
  rm -rf bin && \
  ln -s /opt/act /usr/local/bin
WORKDIR /home/nerd
# }}}

# OpenAPI Generator {{{
# see https://github.com/OpenAPITools/openapi-generator
RUN curl -Lo /opt/openapi-generator.jar \
  https://repo1.maven.org/maven2/org/openapitools/openapi-generator-cli/7.9.0/openapi-generator-cli-7.9.0.jar && \
  echo "java -jar /opt/openapi-generator.jar \$@" > /usr/local/bin/openapi-generator && \
  chmod +x /usr/local/bin/openapi-generator
# }}}

# nvm, node, npm, yarn {{{
USER nerd
# https://github.com/nvm-sh/nvm/releases
RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh | bash
RUN touch /home/nerd/.zshrc && \
  zsh -c "source /home/nerd/.nvm/nvm.sh && nvm install --lts"

# npm
ENV NPM_DIR=/home/nerd/.local/share/npm
RUN [[ -d ${NPM_DIR} ]] || mkdir -p ${NPM_DIR}

# yarn
RUN zsh -c "source /home/nerd/.nvm/nvm.sh && \
  nvm use default && \
  npm install -g --prefix ${NPM_DIR} yarn"
# }}}

# python setup {{{
USER nerd
ENV PYTHON_VERSION="3.12.8"
COPY dotfiles/requirements.txt /tmp
RUN curl -Lo /tmp/install.sh https://astral.sh/uv/install.sh && \
  chmod +x /tmp/install.sh && \
  UV_NO_MODIFY_PATH=1 sh /tmp/install.sh && \
  rm /tmp/install.sh && \
  sudo ln -s /home/nerd/.local/bin/uv /usr/local/bin/uv && \
  uv python install ${PYTHON_VERSION} && \
  sudo ln -s $(uv python find ${PYTHON_VERSION}) /usr/local/bin/python3 && \
  sudo ln -s /usr/local/bin/python3 /usr/local/bin/python && \
  # hash to ensure, that python3 will use the correct version we symlinked above
  hash -r && \
  uv pip install --system --break-system-packages -r /tmp/requirements.txt && \
  sudo rm /tmp/requirements.txt
# }}}

USER root

ENTRYPOINT ["python3", "/home/nerd/engine-room/entrypoint.py"]
