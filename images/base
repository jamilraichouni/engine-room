FROM engine-room:os
LABEL maintainer="Jamil Andr√© RAICHOUNI <raichouni@gmail.com>"
ARG JDK_FILE
USER root

# use zsh for RUN commands {{{
SHELL ["/bin/zsh", "-c"]
ENV SHELL=/bin/zsh
# }}}

# system pkg manager installs {{{
RUN dnf --refresh -y install \
  ImageMagick \
  keepassxc \
  luarocks \
  maven \
  postgresql \
  subversion
# }}}

# system python setup {{{
COPY dotfiles/requirements.txt /tmp
RUN python3 -m pip install -r /tmp/requirements.txt && \
  rm /tmp/requirements.txt
# }}}

# uv setup {{{
USER nerd
ENV PATH="/home/nerd/.local/bin:${PATH}"
ENV PYTHON_VERSION="3.12.8"
COPY dotfiles/requirements.txt /tmp
RUN curl -Lo /tmp/install.sh https://astral.sh/uv/install.sh && \
  chmod +x /tmp/install.sh && \
  UV_NO_MODIFY_PATH=1 sh /tmp/install.sh && \
  rm /tmp/install.sh && \
  uv python install ${PYTHON_VERSION}
# }}}

# Recent Neovim {{{
USER root
WORKDIR /tmp
RUN curl -Lo /tmp/nvim-linux-arm64.tar.gz \
  https://github.com/neovim/neovim/releases/download/v0.11.3/nvim-linux-arm64.tar.gz && \
  tar xvzf /tmp/nvim-linux-arm64.tar.gz && \
  mv nvim-linux-arm64 /opt/nvim && \
  ln -s /opt/nvim/bin/nvim /usr/local/bin/nvim && \
  rm /tmp/nvim-linux-arm64.tar.gz
WORKDIR /home/nerd
# }}}

# Recent JDK {{{
USER root
RUN mkdir -p /usr/lib/jvm
ADD build/${JDK_FILE}/ /usr/lib/jvm
RUN mv /usr/lib/jvm/jdk-* /usr/lib/jvm/jdk && \
  if [ -e /usr/bin/java ]; then mv /usr/bin/java /usr/bin/java.system; fi
# }}}

# GNU Privacy Guard (GnuPG) and Mozilla Secrets OPerationS (SOPS)" {{{
USER root
RUN mkdir -p /home/nerd/.gnupg/private-keys-v1.d && \
  chown -R $(id -u nerd):$(id -g nerd) /home/nerd/.gnupg && \
  chmod -R 700 /home/nerd/.gnupg && \
  dnf -y install \
  https://github.com/getsops/sops/releases/download/v3.10.2/sops-3.10.2-1.$(uname -m).rpm
# }}}

# kubectl {{{
USER root
RUN mkdir -p /home/nerd/.kube && \
  chown $(id -u nerd):$(id -g nerd) /home/nerd/.kube && \
  chmod 700 /home/nerd/.kube && \
  curl -LO \
  "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/arm64/kubectl" && \
  chmod +x kubectl && mv kubectl /opt && ln -s /opt/kubectl /usr/local/bin
# }}}

# oc - OpenShift Command Line Interface (CLI) {{{
USER root
COPY build/oc.tar /home/nerd
RUN tar -xvf oc.tar && \
  mv oc /opt && ln -s /opt/oc /usr/local/bin && \
  rm oc.tar
# }}}

# k3d and helm {{{
USER root
RUN curl -s https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | bash && \
  curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
# }}}

# act {{{
USER root
WORKDIR /tmp
RUN curl --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/nektos/act/master/install.sh | sudo bash && \
  mv bin/act /opt && \
  rm -rf bin && \
  ln -s /opt/act /usr/local/bin
WORKDIR /home/nerd
# }}}

# OpenAPI Generator {{{
# see https://github.com/OpenAPITools/openapi-generator
USER root
RUN curl -Lo /opt/openapi-generator.jar \
  https://repo1.maven.org/maven2/org/openapitools/openapi-generator-cli/7.9.0/openapi-generator-cli-7.9.0.jar && \
  echo "java -jar /opt/openapi-generator.jar \$@" > /usr/local/bin/openapi-generator && \
  chmod +x /usr/local/bin/openapi-generator
# }}}

# nvm, node, npm, yarn and Node packages {{{
USER nerd
# https://github.com/nvm-sh/nvm/releases
RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh | bash
RUN touch /home/nerd/.zshrc && \
  zsh -c "source /home/nerd/.nvm/nvm.sh && nvm install --lts"

# yarn, gh-actions-language-server, remark-parse
# `remark-parse` is needed to format Markdown files using `prettier`
RUN zsh -c "source /home/nerd/.nvm/nvm.sh && \
  nvm use default && \
  npm install -g \
  elkjs \
  gh-actions-language-server \
  prettier \
  prettier-plugin-jinja-template \
  prettier-plugin-tailwindcss \
  remark-parse \
  yarn"
# }}}

# hadolint (Dockerfile linter) {{{
USER root
RUN curl -Lo \
  /opt/hadolint https://github.com/hadolint/hadolint/releases/download/v2.12.0/hadolint-Linux-arm64 && \
  chmod +x /opt/hadolint && \
  ln -s /opt/hadolint /usr/local/bin/hadolint
# }}}

# ollama {{{
USER root
RUN curl -fsSL https://ollama.com/install.sh | sh
# }}}

USER root
ENTRYPOINT ["python3", "/home/nerd/engine-room/entrypoint.py"]
